# -*- coding: utf-8 -*-
"""
Created on Tue Jan 18 09:20:50 2022

@author: yingying yu
"""

import os
import shutil
import docx
import random
import sys

def getRandomQuestion(keyName, dictionary, answerDictionary, number):
    """use keyName from dic get question number 
       number : how many we want"""
    questions = []
    answer = []
    if number < len(dictionary[keyName]):
        save_list =[int(i) for i in range(number)]
        a = number - 1
        for i in range(number):
            randomNumber = random.randint(0,a)
            questions.append(dictionary[keyName][save_list[randomNumber]])
            answer.append(dictionary[keyName][save_list[randomNumber]] + answerDictionary[keyName][save_list[randomNumber]])
            save_list.remove(save_list[randomNumber])
            a -= 1
    else:
        questions = dictionary[keyName]
        for  i in range(len(dictionary[keyName])):
            answer.append(dictionary[keyName][i] +answerDictionary[keyName][i])
    return (questions, answer)
 
    
doc_list  = docx.Document('new_test.docx')
table = doc_list.tables
table0 = table[0]  
dictionatyList = {}
danXuan = {}
danXuan_daAn ={}
panDuan = {}
panDuan_daAn = {}
duoXuan = {}
duoXuan_daAn = {}
questionList={}
keyList =[]
for n in range(1,len(table0.rows)):
    rows_value = table0.rows[n]
    rows_cell = [cell.text for cell in rows_value.cells]
    if rows_cell[2] in dictionatyList.keys():
        if rows_cell[3] not in dictionatyList[rows_cell[2]]:
            dictionatyList[rows_cell[2]].append(rows_cell[3])
    else:
        dictionatyList[rows_cell[2]] =[]
        
    if rows_cell[3] not in keyList:
        danXuan[rows_cell[3]] = []
        danXuan_daAn[rows_cell[3]] = []
        panDuan[rows_cell[3]] = []
        panDuan_daAn[rows_cell[3]] = []
        duoXuan[rows_cell[3]] = []
        duoXuan_daAn[rows_cell[3]] = []
        keyList.append(rows_cell[3])
        danXuan[rows_cell[3]].append(rows_cell[6])
        danXuan_daAn[rows_cell[3]].append(rows_cell[7])
        panDuan[rows_cell[3]].append(rows_cell[8])
        panDuan_daAn[rows_cell[3]].append(rows_cell[9])
        duoXuan[rows_cell[3]].append(rows_cell[10])
        duoXuan_daAn[rows_cell[3]].append(rows_cell[11])
        
    else:
        danXuan[rows_cell[3]].append(rows_cell[6])
        danXuan_daAn[rows_cell[3]].append(rows_cell[7])
        panDuan[rows_cell[3]].append(rows_cell[8])
        panDuan_daAn[rows_cell[3]].append(rows_cell[9])
        duoXuan[rows_cell[3]].append(rows_cell[10])
        duoXuan_daAn[rows_cell[3]].append(rows_cell[11])
        



tests = []
result = []
for i in keyList:
    n = random.randint(1, 3)
    if n == 1:
        dictionary = danXuan
        answerDictionary = danXuan_daAn
    elif n == 2:
        dictionary = panDuan
        answerDictionary = panDuan_daAn
    else:
        dictionary = duoXuan
        answerDictionary = duoXuan_daAn
    
    (n_test, n_anser) = getRandomQuestion(i, dictionary, answerDictionary, 2)
    for x in n_test:
        tests.append(x)
    for y in n_anser:
        result.append(y)


file_test = open("test.txt", "w")
file_test.write("                  test\n")
for i in tests:
    file_test.writelines(i+"\n")
file_test.close()

file_result = open("result.txt", "w")
file_result.write("                     result\n")
for i in result:
    file_result.writelines(i+"\n")
file_result.close()
   



